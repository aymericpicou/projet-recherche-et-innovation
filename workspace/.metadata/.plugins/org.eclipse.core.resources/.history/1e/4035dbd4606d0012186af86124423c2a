package fr.tse.lt2c.satin;
import topic.TopicExtractor;
import topic.TopicModelingResult;


import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;

import cc.mallet.examples.TopicModel;
import cc.mallet.examples.TrainCRF;
import cc.mallet.pipe.Pipe;
import cc.mallet.topics.LDA;
import cc.mallet.topics.SimpleLDA;
import cc.mallet.topics.tui.TopicTrainer;
import cc.mallet.topics.tui.Vectors2Topics;
import cc.mallet.types.InstanceList;
import cc.mallet.util.CommandOption;
import cc.mallet.util.Randoms;

public class TestLecture {

	/**
	 * @param args
	 */
	public static Map<String, int[]> main(String[] args) {
		int nbtopic=20;
		Map<String, Collection<String>> twitterDataset = LectureDataset.lireJeuDonnees("twitter.obj");
		/*Map<String, Collection<String>> le premier string est surement le nom de l'utilisateur, le colection <string> 
		 * est surement l'ensemble de ses tweet*/
		Map<String, int[]> coords=new HashMap<>();/*le premier parametre est le nom des utilisateur, le second : la
		*liste des coordonnées de l'utilisateur en question*/
		String dataset="";
		int j=0;
		for (String user : twitterDataset.keySet()) {//on concatene tout les tweet dans une seule chaine de caractere
			if(j<1000){
			dataset+=twitterDataset.get(user);}
			j++;
		} 
		TopicExtractor ext = new TopicExtractor(dataset, 100, nbtopic, 20, 4);//extraction des themes
		
		TopicModelingResult results = ext.modelingResult();//on analyse le document
		results.prepareInstancesResult();
		ArrayList<String[]> list = results.topicsList();
		System.out.println("voici les themes pour l'ensembe des tweet : \n");
		for (String[] l : list) {
			for (int i = 0; i < l.length; i++)
				System.out.print(l[i] + " ");
			System.out.println("\n");
		}	
		System.out.println("voici le détail sur les premiers tweet : \n");

		String tweets;
		for (String user : twitterDataset.keySet()) {//pour chaque utilisateur
			int coord[];
			coord=new int[nbtopic];
			for(int i=0;i<nbtopic;i++){//on initialise toute les coordonnées à 0
				coord[i]=0;
			}
			tweets=twitterDataset.get(user).toString();//on récupere l'ensemble des tweets dans un seul String
			String word="";
			for(int i=0; i<tweets.length(); i++){//parcours des tweets lettre par lettre
				if(tweets.charAt(i)!=' '){//
					word+=tweets.charAt(i);
				}
				else{//pour chaque mot
					int a=0;//indice du topic
				for (String[] l : list) {//on regarde dans chaque topic...
					for (int k = 0; k < l.length; k++){//chaque mot de chaque topic
						if(l[k].equals(word)){//si ce mot est égale au mot de l'utilisateur...
							coord[a]++;//si c'est le cas, on incremente la coordonnée correspondant au topic
						}
						}//on passe au mot suivant dans le topic
					a++;
				}//on passe au topic suivant
				word="";
				}//on passe au mot suivant
				
			}

			coords.put(user, coord);/*on ajoute l'utilisateur et ses coordonnées à l'ensemble des coordonnées*/
		}//on passe à l'utilisateur suivant
		int i=0;
		for (String user : twitterDataset.keySet()) {//pour chaque user, on affiche les coordonnées dans l'espae à 20 dimensions
			if(i<10){
				System.out.println("utilisateur : " + user);
				System.out.println("tweets : " + twitterDataset.get(user));
				for(int b=0;b<nbtopic;b++){
				System.out.println("coordonnées "+b+" : " +coords.get(user)[b]);}
			}
			i++;
		}
		return coords;
		}//fin du main
	//public static void main(String[] args) {}

}//fin de la classe
	

